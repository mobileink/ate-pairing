load("@rules_cc//cc:defs.bzl", "cc_test")
load("//bzl/config:vars.bzl", "CFLAGS", "DEFINES", "LINK_STATIC_ONLY")

COMMON_SRCS = [
    "test_point.hpp",
    "util.h",
]

## in the same order as in the Makefile:

test_suite(
    name = "test",
    tests = [
        ":zm",
        ":bn",
        ":sample",
        ":loop",
        ":bench",
        ":mini"
    ]
)

test_suite(
    name = "snark",
    tests = [
        ":zm",
        ":bn",
        ":sample",
        ":loop",
        ":bench",
    ],
)

cc_test(
    name = "zm",
    srcs = ["test_zm.cpp"],
    copts = CFLAGS,
    local_defines = DEFINES,
    linkstatic = LINK_STATIC_ONLY,
    visibility = ["//visibility:public"],
    deps = ["//libzm", "//include/cybozu"]
)

cc_test(
    name = "bn",
    srcs = ["bn.cpp"] + COMMON_SRCS,
    copts = CFLAGS,
    local_defines = DEFINES,
    linkstatic = LINK_STATIC_ONLY,
    visibility = ["//visibility:public"],
    deps = ["//libzm",
            "//include/cybozu"
            ],
)

cc_test(
    name = "sample",
    srcs = [
        "sample.cpp",
    ] + COMMON_SRCS,
    copts = CFLAGS,
    local_defines = DEFINES,
    linkstatic = LINK_STATIC_ONLY,
    visibility = ["//visibility:public"],
    # static build fails on undefined references
    # linkstatic = False,
    deps = ["//libzm"],
)

# cc_binary(
#     name = "java_api",
#     visibility = ["//visibility:public"],
#     srcs = glob(["java_api.cpp"]),
#     copts = ["-Iinclude"],
#     deps = ["@//java",
#             "//libzm"]
# )

cc_test(
    name = "loop",
    srcs = [
        "loop_test.cpp",
    ] + COMMON_SRCS,
    copts = CFLAGS,
    local_defines = DEFINES,
    linkstatic = LINK_STATIC_ONLY,
    visibility = ["//visibility:public"],
    deps = ["//libzm"],
)

cc_test(
    name = "bench",
    srcs = ["bench.cpp"],
    copts = CFLAGS,
    local_defines = DEFINES,
    linkstatic = LINK_STATIC_ONLY,
    visibility = ["//visibility:public"],
    deps = [
        "//libzm",
        "//include/cybozu"
    ],
)

cc_test(
    name = "mini",
    srcs = [
        "minitest.cpp",
        "test_point.hpp",
    ],
    linkstatic = LINK_STATIC_ONLY,
    copts = CFLAGS
    + select({
        "//bzl/config:disable_snark" : [],
    },
              no_match_error = "config option --//:snark not supported by test:mini."
                            ),
    local_defines = DEFINES,
    visibility = ["//visibility:public"],
    deps = ["//libzm"],
)
